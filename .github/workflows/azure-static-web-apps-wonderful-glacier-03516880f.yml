name: Test Server CI/CD

on:
  push:
    branches:
      - TEST
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - TEST

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    environment: TESTING
    permissions:
      contents: write # Ensure write access to repository contents for the GITHUB_TOKEN
    env:
      NEXT_PUBLIC_BE_URL: ${{ secrets.NEXT_PUBLIC_BE_URL }}
      NEXT_PUBLIC_FIREBASE_JSON: ${{ secrets.NEXT_PUBLIC_FIREBASE_JSON }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Configure Git
      - name: Configure Git
        run: |
          git config --global user.name "ybotman"
          git config --global user.email "toby.balsley@gmail.com"

      # Increment the patch version
      - name: Increment Patch Version
        run: npm version patch

      # Fetch the latest commits
      - name: Get Commit History
        run: git log -10 --pretty=format:"%h - %s" > commit_logs.txt

      # Append the version and commit logs to a JSON file
      - name: Append Version and Commits to JSON
        run: |
          VERSION=$(npm pkg get version | tr -d '"')
          if [ -f versions.json ]; then
            echo "Updating existing versions.json"
          else
            echo "Creating versions.json"
            echo "[]" > versions.json
          fi
          jq --arg ver "$VERSION" --argjson commits "$(cat commit_logs.txt | jq -R . | jq -s .)" \
            '. += [{"version": $ver, "commits": $commits}]' versions.json > temp.json && mv temp.json versions.json

      # Commit the version history
      - name: Commit Version History
        run: |
          git add versions.json
          git commit -m "chore: update version history for $VERSION"

      # Push the changes using the GITHUB_TOKEN
      - name: Push Changes
        run: git push https://github.com/ybotman/TangoTiempoFE.git
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
